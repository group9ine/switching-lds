model {
  # useful variables
  for (d in 1:D) {
    Id[d, 1:D] <- c(rep(0, d - 1), 1, rep(0, D - d))
    Ab_mean[d, 1:D] <- c(rep(0, d - 1), 1, rep(0, D - d))
  }
  for (d in 1:(D + 1)) {
    Id2[d, 1:(D+1)] <- c(rep(0, d - 1), 1, rep(0, D + 1 - d))
  }
  Od <- rep(0, D + 1)
  a = rep(1, K)

  Ab_mean[D + 1, 1:D] <- rep(0, D)

  # priors
  for (k in 1:K) { 
    Q[k, 1:D, 1:D] ~ dwish(Id, D)
    for (i in 1:D) { 
      # equivalent to setting matrix S to Identity
      # in matrix-normal(Ab_mean, V kron S)
      V[k, i, 1:(D + 1), 1:(D + 1)] ~ dwish(Id2, D + 1)
      Ab[k, 1:(D + 1), i] ~ dmnorm(Ab_mean[, i], V[k, i,,])
    }
    
    pi[k, 1:K] ~ ddirch(a)
    # if K == 1 use pi[k, 1:K] ~ dbeta(1, 1)
  }

  p ~ ddirch(a)
  # if K == 1 use p ~ dbeta(1,1)

  z[1] ~ dcat(p)

  # update rules
  for (t in 2:T) { 
    z[t] ~ dcat(pi[z[t - 1],])
    # multivariate defined in terms of covariance matrix
    x[t, 1:D] ~ dmnorm(Ab[z[t], 1:D,] %*% x[t - 1, 1:D] + Ab[z[t], D + 1,],
                      Q[z[t],,]) 
  }

  # final prediction for trajectory continuation
  predz[1] ~ dcat(pi[z[T],])
  predx[1, 1:D] ~ dmnorm(Ab[predz[1],1:D,] %*% x[T, 1:D]
                         + Ab[predz[1], D + 1,], Q[predz[1],,]) 

  # if we wanted to start from the same point as the original data we could use
  # predz[1] <- z[1]
  # predx[1, 1:D] <- x[1, 1:D]

  for (t in 2:T) {
    predz[t] ~ dcat(pi[predz[t - 1],])
    predx[t, 1:D] ~ dmnorm(Ab[predz[t], 1:D,] %*% predx[t - 1, 1:D]
                           + Ab[predz[t], D + 1,], Q[predz[t],,]) 
  }
}
